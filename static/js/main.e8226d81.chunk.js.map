{"version":3,"sources":["components/Jumbotron/Jumbotron.jsx","components/Table/Row.jsx","components/Table/Header.jsx","components/Search/Search.jsx","components/Table/Table.jsx","App.js","reportWebVitals.js","index.js"],"names":["Jumbotron","className","Row","id","image","name","phone","email","dob","src","alt","Header","handleNameSort","icon","onClick","console","log","Search","value","handleInputChange","handleSearch","type","placeholder","aria-label","onChange","Table","state","currentPeople","seeds","aToZ","aToZIcon","searchInput","sorted","sort","first","next","toUpperCase","a","b","setState","event","preventDefault","found","item","includes","push","target","this","search","length","map","person","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8226d81.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Jumbotron.css\"\n\nconst Jumbotron = () => {\n  return (\n    <div className=\"jumbo text-center\">\n      <h1 className=\"display-4\">Employee Directory</h1>\n      <p>\n        Click on carrots to filter by heading or use the search box to narrow your results\n      </p>\n    </div>\n  );\n};\n\nexport default Jumbotron;\n","import React from 'react';\n\nconst Row = ({id, image, name, phone, email, dob}) => {\n    return (\n        <tr>\n            <td>\n                <img src={image} alt={name}/>\n            </td>\n            <td>\n                {name}\n            </td>\n            <td>\n                {phone}\n            </td>\n            <td>\n                {email}\n            </td>\n            <td>\n                {dob}\n            </td>\n        </tr>\n    );\n};\n\nexport default Row;","import React from \"react\";\n\nconst Header = ({handleNameSort, icon}) => {\n  return (\n    <tr>\n      <th onClick={()=> {console.log(\"click\")}}>Image</th>\n      <th id=\"name-sort\" onClick={()=> {handleNameSort()}}>Name<i className={icon}></i></th>\n      <th onClick={()=> {console.log(\"click\")}}>Phone</th>\n      <th onClick={()=> {console.log(\"click\")}}>Email</th>\n      <th onClick={()=> {console.log(\"click\")}}>DOB</th>\n    </tr>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./Search.css\"\n\nconst Search = ({name, value, handleInputChange, handleSearch}) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <form className=\"form-inline my-2 my-lg-0 mx-auto\">\n        <input\n          name={name}\n          value={value}\n          className=\"form-control mr-sm-2\"\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          onChange={handleInputChange}\n        />\n        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" onClick={handleSearch}>\n          Search\n        </button>\n      </form>\n    </nav>\n  );\n};\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Header from \"./Header\";\nimport seeds from \"../../seeds/seeds.json\";\nimport Search from \"../Search/Search\";\nimport \"./Table.css\";\n\nclass Table extends Component {\n  state = {\n    currentPeople: seeds,\n    aToZ: false,\n    aToZIcon: \"fas fa-sort-alpha-up\",\n    searchInput: \"\",\n  };\n\n  handleNameSort = () => {\n    let icon = \"fas fa-sort-alpha-up\";\n    // alphabetizes names\n    const sorted = this.state.currentPeople.sort((first, next) => {\n      let [a, b] = [first.name.toUpperCase(), next.name.toUpperCase()];\n      if (this.state.aToZ) {\n        // sorts from z to a if sorted from a to z\n        [b, a] = [a, b];\n        icon = \"fas fa-sort-alpha-down-alt\";\n      }\n      // sorts from a to z if not sorted or sorted from z to a\n      if (a > b) {\n        return 1;\n      } else if (a < b) {\n        return -1;\n      } else {\n        return 0;\n      }\n    });\n    this.setState({\n      currentPeople: sorted,\n      // keeps track of how list is sorted\n      aToZ: !this.state.aToZ,\n      aToZIcon: icon,\n    });\n  };\n\n  handleSearch = (event) => {\n    event.preventDefault();\n\n    const found = [];\n    // searches for match in seeds for name, phone, email, or dob category\n    for (const item of seeds) {\n      console.log(item.name)\n      if (item.name.includes(this.state.searchInput)) {\n        found.push(item);\n      } else if (item.phone.includes(this.state.searchInput)) {\n        found.push(item);\n      } else if (item.email.includes(this.state.searchInput)) {\n        found.push(item);\n      } else if (item.dob.includes(this.state.searchInput)) {\n        found.push(item);\n      }\n    }\n    console.log(found);\n    this.setState({\n      currentPeople: found,\n      // searchInput: \"\"\n    });\n  };\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Search\n          handleInputChange={this.handleInputChange}\n          handleSearch={this.handleSearch}\n          name=\"searchInput\"\n          value={this.state.search}\n        />\n        <div className=\"container\">\n          {\n            // An empty search displays an h3 tag on the page\n            this.state.currentPeople.length === 0 ? (\n              <h3 className=\"text-center\" id=\"no-results\">\n                No Results Found!\n              </h3>\n            ) : (\n              // default displays table\n              <table>\n                <thead>\n                  <Header\n                    handleNameSort={this.handleNameSort}\n                    icon={this.state.aToZIcon}\n                  />\n                </thead>\n                <tbody>\n                  {this.state.currentPeople.map((person) => (\n                    <Row\n                      key={person.id}\n                      image={person.image}\n                      name={person.name}\n                      email={person.email}\n                      phone={person.phone}\n                      dob={person.dob}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            )\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Table;\n","import Jumbotron from \"./components/Jumbotron/Jumbotron\";\n// import Search from \"./components/Search/Search\";\nimport Table from \"./components/Table/Table\";\n\nfunction App() {\n  return (\n    <div>\n      <Jumbotron />\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}